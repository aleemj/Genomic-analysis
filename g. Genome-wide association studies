#GWAS using GEMMA https://github.com/genetics-statistics/GEMMA.git

#Before starting:
#to install GEMMA using conda package manager, ensure conda is available first
conda install gemma
#input genotype file must be in plink .bed format
#input phenotype is in the .fam file under the 6th column, 2nd column is the individual ids - recognises "-9" or "NA" as missing phenotype, "0" / "1" can be used for case/control GWAS.
#for multiple phenotypes, add in .fam file columns from 6th column onwards ("-n 1": 6th column, "-n 2": 7th column and so on) (Refer to #Note 4).

#1. Association Tests with a Linear Model
gemma -bfile $input -lm 3 -o $output

#2. Estimate relatedness matrix
gemma -bfile $input -gk 1 -o $output 

#3. Eigen-decomposition of relatedness matrix
gemma -bfile $input -k $relatedness_matrix -eigen -o $output

#4. Association Tests with Univariate Linear Mixed Models
gemma -bfile $input -k $relatedness_matrix.cXX.txt -c $covariate(optional) -lmm 3 -o $output

#5. Association Tests with Multivariate Linear Mixed Models
gemma -bfile $input -k $relatedness_matrix.cXX.txt -c $covariate(optional) -lmm 3 -n 1 -o $output

#6. Fit a Bayesian Sparse Linear Mixed Model
gemma -bfile $input  -bslmm [num] -o $output

#Note:
#1. where "lm [num]" specifies which test to use: “-lm 1” performs Wald test, “-lm 2” performs likelihood ratio test, “-lm 3” performs score test, and “-lm 4” performs all the three tests.
#2. where "gk [num]" specifies which matrix to calculate: “-gk 1” calculates the centered relatedness matrix while “-gk 2” calculates the standardized relatedness matrix.
#3. where “-k [filename]” could be replaced by “-d [filename]” and “-u [filename]”, where “- d [filename]” specifies the eigen value file and “-u [filename]” specifies the eigen vector file.
#4. where "-n [num]" specifies the columns to use as the phenotypes, where multiple phenotypes are present one can use "-n [num1] [num2] [num3]", keep to less than 10 phenotypes
#5. where “-bslmm [num]” option specifies which model to fit, i.e. “-bslmm 1” fits a stan- dard linear BSLMM, “-bslmm 2” fits a ridge regression/GBLUP, and “-bslmm 3” fits a probit BSLMM

#Errors:
#Error 1: Enforce failed for number of analyzed individuals equals 0. in src/param.cpp at line 2073 in ProcessCvtPhen
#Solution 1: ensure .fam file has phenotype column filled in - "-9" or "NA" will result in this error.

#Error 2: Cannot write output file
#Solution 2: Ensure output file name has no directory, cd into directory where output file destination is desired instead. 

####################################

#Plot using R using qqman package https://cran.r-project.org/web/packages/qqman/index.html
#Replace [SNPnum] with number of SNPs

phenotype_names <- colnames(myY)
GWAS_Bonn_corr_threshold <- -log10(0.05 / [SNPnum]) ; Suggested_threshold <- 5

for (k in 2:length(phenotype_names)) {
  # Preparing data
  phenotype_id <- phenotype_names[k]
  filename <- paste0("GAPIT.Association.GWAS_Results.MLM.",phenotype_id,".csv")
  GWAS_matrix <- fread(filename,header = F, sep = ",") %>%
    mutate(V1 = paste(V1,V2,sep=",")) %>%
    select(1,3:5) %>%
    rename("SNP" = "V1",
           "Chr" = "V3",
           "Pos" = "V4",
           "P_value" = "V5") %>%
    mutate(Chr = as.integer(str_replace(Chr,"SCAFFOLD_","")))
  # Plot manhattan plot
  png(paste0("../",phenotype_id,"_MLM_5PC_kinship_ManhattanPlot.png"), width = 1000, height = 600)
  Mann_plot <- manhattan(
    GWAS_matrix,
    chr = "Chr",
    bp = "Pos",
    snp = "SNP",
    p = "P_value",
    col = c("blue3","goldenrod"),
    annotateTop = T,
    genomewideline = GWAS_Bonn_corr_threshold,
    suggestiveline = Suggested_threshold,
    main = paste0("MLM for Arugula (Phenotype: ",phenotype_id,")"),
    cex.main = 1.6, cex.axis = 1.2, cex.lab = 1.3, las = 1)
  dev.off()
  
  # Calculate lambda value
  GWAS_matrix <- GWAS_matrix %>% arrange(P_value)
  P_values_vec <- GWAS_matrix$P_value
  inflation <- function(ps) { 
    chisq <- qchisq(1 - ps, 1) 
    lambda <- median(chisq) / qchisq(0.5, 1) 
    print(lambda)}
  lambda <- round(inflation(P_values_vec),2)
  # Plot QQ plot
  png(paste0("../",phenotype_id,"_MLM_10PC_kinship_QQPlot.png"), width = 600, height = 600)
  QQ_plot <- qq(GWAS_matrix$P_value, main="", col = "blue", cex = 2, pch = 1,
                cex.main = 1.8, cex.axis = 1.2, cex.lab = 1.3, las = 1)
  text(x = par("usr")[2] - 1.2, y = par("usr")[3] + 0.4, labels = paste0(" λ = ", lambda), 
       pos = 3, adj = 1, cex = 3)
  dev.off()
}
